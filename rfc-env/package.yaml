name: rfc-env
version: 0.0.0.2
synopsis: Environment variable support from the Robert Fischer Commons.
description: >
  For GHCJS (and GHC), provides a simple way to check if you are on development.

  For GHC, provides an opinionated and simple way to interface with environment variables, 
  current based on @envy@.

  This is part of the Robert Fischer commons, which are the @rfc-@ family of packages.
category: envars
github: RobertFischer/rfc/rfc-env
author: Robert Fischer
license: MIT

_common: !include package.common.yaml

<<: *defaults

dependencies:
  - rfc-prelude 
  - base >= 4.9 && < 5
  - time

flags:
  production:
    description: If true, disables the development flag in the codebase.
    manual: true
    default: true

when:
  - *when_ghcjs
  - condition: "!impl(ghcjs)"
    dependencies:
      - envy
      - network
  - condition: impl(ghcjs) && flag(production)
    then: # For some reason, it is requiring me to put a 'then' in here, or it complains about not knowing 'ghc-options'.
      ghc-options:
        - -dedupe
    else:
      cpp-options: # Need to put something in here which doesn't do any harm....
        - -DNOT_GHCJS_OR_NOT_PRODUCTION
  - condition: flag(production)
    then:
      ghc-options:
        - -feager-blackholing 
        - -funbox-strict-fields 
        - -fstatic-argument-transformation
        - -flate-dmd-anal 
        - -fexpose-all-unfoldings 
        - -fspecialise-aggressively 
        - -fexcess-precision 
        - -fmax-simplifier-iterations=15
        - -fsimplifier-phases=4
        - -fstrictness-before=3
        - -funfolding-keeness-factor=1.5
        - -funfolding-use-threshold=150
    else:
      cpp-options:
        - -DDEVELOPMENT
      ghc-options:
        - -freverse-errors
        - -Werror 
        - -dcore-lint 
        - -dcmm-lint
